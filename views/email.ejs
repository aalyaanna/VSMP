    <!-- Dito yung design for email
        if may naiisip pa kayong design huhu kayo na to T T-->

        <%- include('header') -%>

        <body>
            <!--Navigation bar-->
            <nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top">
                <div class="container">
                  <a class="navbar-brand" href="/homepage"><span class="text-dark">Sound</span>Send</a>
        
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    
                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                            <li class="nav-item">
                                <a class="nav-link" href="#" id="magnify">Magnifier</a>
                            </li>
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                  Modes of Screen
                                </a>
                                <!-- Wait lang, tatapusin ko within the week -->
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" id="default">Default</a></li>
                                    <li><a class="dropdown-item" id="dark-mode">Dark Mode</a></li>
                                    <li><hr class="dropdown-divider" style="border-color:black;"></li>
                                    <li><span class="dropdown-item-text" value="FontSizeChanger">Font Size Changer</span></li>
                                    <li>
                                    <span class="dropdown-item-text value">20px</span>
                                    <input
                                    type="range"
                                    name="range"
                                    id="range-slider"
                                    class="range-slider"
                                    min="16"
                                    max="30"
                                    value="40"
                                    step="1"
                                    />
                                    </li>
                                    <li><hr class="dropdown-divider" style="border-color:black;"></li>
                                    <li><a class="dropdown-item" value="ResetFontSize" id="reset-font-size">Reset Font Size</a></li>
                                    <li><hr class="dropdown-divider" style="border-color:black;"></li>
                                    <li><span class="dropdown-item-text">Colorblind Options</span></li>
                                    <li><a class="dropdown-item" id="deuteranomaly">Deuteranomaly</a></li>
                                    <li><a class="dropdown-item" id="protanomaly">Protanomaly</a></li>
                                    <li><a class="dropdown-item" id="tritanomaly">Tritanomaly</a></li>
                                </ul>
                            </li>
                        </ul>
                    </div>
                    </div>
                </nav>
        
            <!-- Body content for email-->
            <section class="email_padding">
                <div class="container border border-black rounded email_custom py-5">
                    <div class="m-3">
                        <div id="notification" name="notification" class="notification text-center d-flex justify-content-center align-items-center"></div>
                            <div class> 
                                <a type="button" class="btn btn-back email_btn" href="/homepage"><i class="bi bi-caret-left-fill"></i>  Back</a>
                            </div> 
                        </div>
                    <br><br>
                        <form id="emailForm" action="/send-email" method="POST" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label font-changer">From:</label>
                            <input type="email" class="form-control font-changer" name="userEmailAddress" id="userEmailAddress" value="oshisoffline@gmail.com" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label font-changer">To:</label>
                            <input type="email" class="form-control font-changer" name="recipientEmailAddress" id="recipientEmailAddress" placeholder="example@gmail.com" required>
                        </div>
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label font-changer">Subject:</label>
                            <input type="text" class="form-control font-changer" name="subjectEmail" id="subjectEmail">
                        </div>
                        <div class="mb-3">
                            <label for="exampleFormControlTextarea1" class="form-label font-changer">Body:</label>
                            <textarea class="form-control font-changer" name="bodyEmail" id="bodyEmail" rows="3"></textarea>
                        </div>
                        <div class="row mb-3">
                            <div class="col-6">
                                <button type="button" id="attachFileButton" class="btn btn-attach font-changer"><i class="bi bi-folder-plus"></i>&nbsp;&nbsp;&nbsp;Attach Files</button>
                                <input type="file" name="attachment" id="fileInput" style="position: absolute; top: -9999px;" class="font-changer">
                            </div>
                            <div class="col-6 text-end">
                                <button id="startSpeechRecognition" class="btn btn-speech font-changer">
                                    <i class="bi bi-mic-fill"></i> Activate Speech Recognition
                                </button>
                            </div>
                        </div>
                        <!-- notification alert for file uploading -->
                        <div class="row mb-3">
                            <div class="col-md-12 text-end">
                                <div id="fileUploadedAlert" class="alert alert-success d-none font-changer" role="alert">
                                    File uploaded successfully!
                                </div>
                                <div id="noFileUploadedAlert" class="alert alert-warning d-none font-changer" role="alert">
                                    No file uploaded.
                                </div>
                            </div>
                        </div>
                        <div id="fileNameContainer" class="mt-2"></div>
                        <div class="row">
                        <div class="col-md-12 text-center">
                            <button type="submit" class="btn btn-send font-changer">Send Email</button>
                        </div>
                        </div>
                        </form>
                    </div>
                </div>
            </section>
    
            <%- include('footer') -%>
    
    <script>

    //magnifying glass
    const SCALE = 1.3; //magnification
    const SIZE = 150; //diameter
    const LENSE_OFFSET_X = SIZE / 10.2;
    const LENSE_OFFSET_Y = SIZE / 10.2;
    
    document.documentElement.style.setProperty("--scale", SCALE);
    document.documentElement.style.setProperty("--size", SIZE + "px");
    
    //create magnifying glass (lense)
    const handle = document.createElement("div");
    handle.classList.add("handle");
    
    const magnifyingGlass = document.createElement("div");
    magnifyingGlass.classList.add("magnifying-glass");
    magnifyingGlass.style.top = LENSE_OFFSET_Y + "px";
    magnifyingGlass.style.left = LENSE_OFFSET_X + "px";
    
    handle.append(magnifyingGlass);
    
    const magnifyButton = document.getElementById("magnify");
    
    const addMagnifyingGlass = () => {
    const bodyClone = document.body.cloneNode(true);
    bodyClone.classList.add("body-clone");
    bodyClone.style.top = "0px";
    bodyClone.style.left = "0px";
    magnifyingGlass.append(bodyClone);
    document.body.append(handle);
    };
    
    magnifyButton.addEventListener("click", addMagnifyingGlass);
    
    const moveMagnifyingGlass = (event) => {
    let pointerX = event.pageX;
    let pointerY = event.pageY;

    //move magnifying glass with cursor
    handle.style.left = pointerX - SIZE / 1.7 + "px";
    handle.style.top = pointerY - SIZE / 1.7 + "px";
        if (magnifyingGlass.children[0]) {
            //align magnified document
            let offsetX = (SIZE * Math.pow(SCALE, 2)) / 2 - pointerX * SCALE;
            let offsetY = (SIZE * Math.pow(SCALE, 2)) / 2 - pointerY * SCALE;
            magnifyingGlass.children[0].style.left = offsetX + "px";
            magnifyingGlass.children[0].style.top = offsetY + "px";
            }
        };
    
    document.addEventListener("pointermove", moveMagnifyingGlass);
    const removeMagnifiyingGlass = (event) => {
    magnifyingGlass.children[0].remove();
    handle.remove();
    };
    
    magnifyingGlass.addEventListener("dblclick", removeMagnifiyingGlass);

    //Sa font size changer, wag po muna galawin
    $(document).ready(function () {
        $("#range-slider").on("input change", function () {
            $(".font-changer").css("font-size", $(this).val() + "px");
            $(".value").text($(this).val() + "px");
        });
    });

    // sa pagbalik kapag naclik yung font changer hehe
        $(document).ready(function () {
            $("#range-slider").on("input change", function () {
                const fontSize = $(this).val() + "px";
                $(".font-changer").css("font-size", fontSize);
                $(".value").text(fontSize);
            });

            $("#reset-font-size").on("click", function () {
                const defaultFontSize = "19px";
                $(".font-changer").css("font-size", defaultFontSize);
                $("#range-slider").val(16);
                $(".value").text(defaultFontSize);
            });
        });

    //sa modes of screen, wag po munang galawin pls pls pls nagpapractice pa po T T
            function setDefaultMode() {
                const body = document.body;
                body.classList.remove("dark-mode");
                body.classList.remove("deuteranomaly-mode");
                body.classList.remove("protanomaly-mode");
                body.classList.remove("tritanomaly-mode");
                localStorage.setItem("darkModeEnabled", "false");
                localStorage.setItem("deuteranomalyModeEnabled", "false");
                localStorage.setItem("protanomalyModeEnabled", "false");
                localStorage.setItem("tritanomalyModeEnabled", "false");
            }

            const defaultModeButton = document.getElementById("default");
            defaultModeButton.addEventListener("click", setDefaultMode);

            function toggleDarkMode() {
                const body = document.body;
                if (body.classList.contains("dark-mode")) {
                    body.classList.remove("dark-mode");
                    body.classList.remove("deuteranomaly-mode");
                    body.classList.remove("protanomaly-mode");
                    body.classList.remove("tritanomaly-mode");
                    localStorage.setItem("darkModeEnabled", "false");
                } else {
                    body.classList.add("dark-mode");
                    localStorage.setItem("darkModeEnabled", "true");
                }
            }

            const darkModeButton = document.getElementById("dark-mode");
            darkModeButton.addEventListener("click", toggleDarkMode);

            function toggleDeuteranomalyMode() {
                const body = document.body;
                if (body.classList.contains('deuteranomaly-mode')) {
                    body.classList.remove('deuteranomaly-mode');
                    localStorage.setItem('deuteranomalyModeEnabled', 'false');
                } else {
                    body.classList.add('deuteranomaly-mode');
                    localStorage.setItem('deuteranomalyModeEnabled', 'true');
                }
            }

            const deuteranomalyButton = document.getElementById('deuteranomaly');
            deuteranomalyButton.addEventListener('click', toggleDeuteranomalyMode);

            function toggleProtanomalyMode() {
                const body = document.body;
                if (body.classList.contains('protanomaly-mode')) {
                    body.classList.remove('protanomaly-mode');
                    localStorage.setItem('protanomalyModeEnabled', 'false');
                } else {
                    body.classList.add('protanomaly-mode');
                    localStorage.setItem('protanomalyModeEnabled', 'true');
                }
            }

            const protanomalyButton = document.getElementById('protanomaly');
            protanomalyButton.addEventListener('click', toggleProtanomalyMode);

            function toggleTritanomalyMode() {
                const body = document.body;
                if (body.classList.contains('tritanomaly-mode')) {
                    body.classList.remove('tritanomaly-mode');
                    localStorage.setItem('tritanomalyModeEnabled', 'false');
                } else {
                    body.classList.add('tritanomaly-mode');
                    localStorage.setItem('tritanomalyModeEnabled', 'true');
                }
            }

            const tritanomalyButton = document.getElementById('tritanomaly');
            tritanomalyButton.addEventListener('click', toggleTritanomalyMode);

            if (localStorage.getItem("darkModeEnabled") === "true") {
                toggleDarkMode();
            } else if (localStorage.getItem("deuteranomalyModeEnabled") === "true") {
                toggleDeuteranomalyMode();
            } else if (localStorage.getItem("protanomalyModeEnabled") === "true") {
                toggleProtanomalyMode();
            } else if (localStorage.getItem("tritanomalyModeEnabled") === "true") {
                toggleTritanomalyMode();
            } else {
                setDefaultMode();
            }

    //declaring variables for handing email sending, including attach file function
    const emailForm = document.getElementById('emailForm');
    const notificationElement = document.getElementById('notification');
    
    const fileInput = document.getElementById('fileInput');
    const attachFileButton = document.getElementById('attachFileButton');
    
    const fileUploadedAlert = document.getElementById('fileUploadedAlert');
    const noFileUploadedAlert = document.getElementById('noFileUploadedAlert');
    
    const fileNameContainer = document.getElementById('fileNameContainer');
    
    attachFileButton.addEventListener('click', () => {
        fileInput.click();
    });
    
    //showing the file name, and notification alert for file uploading
    fileInput.addEventListener('change', () => {
        const attachment = fileInput.files[0];
        if (attachment) {
            const fileName = attachment.name;
            fileNameContainer.textContent = `Attached File: ${fileName}`;
            noFileUploadedAlert.classList.add('d-none');
            fileUploadedAlert.classList.remove('d-none');
        } else {
            fileNameContainer.textContent = '';
            noFileUploadedAlert.classList.remove('d-none');
            fileUploadedAlert.classList.add('d-none');
        }
    });
    
    emailForm.addEventListener('submit', async (event) => {
        event.preventDefault();
    
        const formData = new FormData(emailForm);
    
        try {
            const response = await fetch('/send-email', {
                method: 'POST',
                body: formData,
            });
    
            const result = await response.json();
    
            if (result.status === 'success') {
                notificationElement.textContent = result.message;
                fileNameContainer.textContent = '';
                fileInput.value = '';
                noFileUploadedAlert.classList.add('d-none'); 
                fileUploadedAlert.classList.add('d-none');
            } else {
                console.error(result.message);
                notificationElement.textContent = 'An error occurred while sending the email.';
            }
    
            emailForm.reset();
        } catch (error) {
            console.error(error);
            notificationElement.textContent = 'An error occurred while sending the email.';
        }
    });

    //speech to text recognition function, using javascript only
function capitalizeFirstLetter(transcript) {
    return transcript.charAt(0).toUpperCase() + transcript.slice(1);
}

function addPunctuation(transcript) {
    const lastChar = transcript.trim().slice(-1);
    if (lastChar === 'question mark') {
        return '?';
    } else if (lastChar === 'period') {
        return '.';
    } else if (lastChar === 'comma') {
        return ',';
    } else {
        return transcript;
    }
}
    let recognition;
    let timeout;

    document.addEventListener('DOMContentLoaded', () => {
    const bodyEmailTextarea = document.getElementById('bodyEmail');
    const startSpeechRecognitionButton = document.getElementById('startSpeechRecognition');

    let recognition = new webkitSpeechRecognition();

    recognition.continuous = true;
    recognition.interimResults = true;
    recognition.lang = 'en-US';

    recognition.onresult = function(event) {
    clearTimeout(timeout);
    let interimTranscript = '';
    const activeElement = document.activeElement;

        if (!activeElement.classList.contains('form-control')) {
            for (let i = event.resultIndex; i < event.results.length; ++i) {
                if (event.results[i].isFinal) {
                    const transcript = event.results[i][0].transcript;
                    transcript = addPunctuation(transcript);
                    transcript = capitalizeFirstLetter(transcript);
                    bodyEmailTextarea.value += modifiedTranscript;
                    console.log('Transcript:', transcript);
                } else {
                    interimTranscript += event.results[i][0].transcript;
                }
            }
        };

    //detect pause from speech to create a new paragraph
    timeout = setTimeout(() => {
            bodyEmailTextarea.value += '\n\n';
        }, 5000);
    };
    
    recognition.onend = function() {
            startSpeechRecognitionButton.disabled = false;
    };
        startSpeechRecognitionButton.addEventListener('click', function() {
            recognition.start();
            startSpeechRecognitionButton.disabled = true;
        });
    });
    
    //transcribing "question mark" as a symbol not as an actual word
    // function processTranscript(transcript) {
    //     if (transcript.toLowerCase().includes('question mark')) {
    //         return '?';
    //     } else {
    //         return transcript + ' ';
    //     }
    // }

    //click a certain field for the computer to read its content, 
    //to be edited
    document.addEventListener('DOMContentLoaded', () => {
    const fields = document.querySelectorAll('.form-control');

    fields.forEach(field => {
        field.addEventListener('click', function() {
            const content = this.value;
            speak(content);
        });
    });

    function speak(content) {
        const synth = window.speechSynthesis;
        const utterance = new SpeechSynthesisUtterance(content);
        const voices = synth.getVoices();
        const femaleVoice = voices.find(voice => voice.name.includes('Female'));

        utterance.voice = femaleVoice;
        synth.speak(utterance);
        }
    });

    </script>
    </body>
    
